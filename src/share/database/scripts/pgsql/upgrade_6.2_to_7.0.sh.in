#!/bin/sh

# Copyright (C) 2021 Internet Systems Consortium, Inc. ("ISC")
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# shellcheck disable=SC1091
# SC1091: Not following: ... was not specified as input (see shellcheck -x).

# Exit with error if commands exit with non-zero and if undefined variables are
# used.
set -eu

# shellcheck disable=SC2034
# SC2034: ... appears unused. Verify use (or export if used externally).
prefix="@prefix@"

# Include utilities. Use installed version if available and
# use build version if it isn't.
if [ -e @datarootdir@/@PACKAGE_NAME@/scripts/admin-utils.sh ]; then
    . "@datarootdir@/@PACKAGE_NAME@/scripts/admin-utils.sh"
else
    . "@abs_top_builddir@/src/bin/admin/admin-utils.sh"
fi

VERSION=$(pgsql_version "$@")

if [ "$VERSION" != "6.2" ]; then
    printf 'This script upgrades 6.2 to 7.0. '
    printf 'Reported version is %s. Skipping upgrade.\n' "${VERSION}"
    exit 0
fi

psql "$@" >/dev/null <<EOF

START TRANSACTION;

-- Create table modification and insert values for modification types.
CREATE TABLE modification (
  id smallint NOT NULL,
  modification_type varchar(32) NOT NULL,
  PRIMARY KEY (id)
);
INSERT INTO modification VALUES (0,'create'), (1,'update'), (2,'delete');



-- Now create the table that holds different parameter data types.
CREATE TABLE parameter_data_type (
  id smallint NOT NULL,
  name varchar(32) NOT NULL,
  PRIMARY KEY (id)
);
INSERT INTO parameter_data_type VALUES (0,'integer'),(1,'real'),(2,'boolean'),(4,'string');



DROP TABLE IF EXISTS dhcp6_server;
CREATE TABLE dhcp6_server (
  id SERIAL PRIMARY KEY NOT NULL,
  tag varchar(256) NOT NULL,
  description text DEFAULT NULL,
  modification_ts timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE(tag)
);
CREATE INDEX dhcp6_server_modification_ts ON dhcp6_server (modification_ts);

-- Adding on update trigger in MySQL is as easy as using this column definition in CREATE TABLE:
-- modification_ts timestamp NOT NULL DEFAULT Ccurrent_timestamp() ON UPDATE current_timestamp(),
-- Sadly, Postgres has its own convoluted way of doing this:

-- First, we need to define a function that will do the actual job.
CREATE OR REPLACE FUNCTION dhcp6_server_modification_ts_update()
  RETURNS trigger AS $dhcp6_server_modification_ts_update$
  BEGIN
    new.modification_ts = CURRENT_TIMESTAMP;
  END;

-- Second, we need to specify which language it was written in.
$dhcp6_server_modification_ts_update$ LANGUAGE plpgsql;

-- Finally, we need to create a trigger that will kick off this function.
CREATE TRIGGER dhcp6_server_modification_ts_update
  AFTER UPDATE ON dhcp6_server
  FOR EACH ROW EXECUTE PROCEDURE dhcp6_server_modification_ts_update();





-- Update the schema version number
UPDATE schema_version
    SET version = '7', minor = '0';

-- Schema 7.0 specification ends here.

-- Commit the script transaction
COMMIT;

EOF
